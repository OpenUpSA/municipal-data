# Generated by Django 2.2.28 on 2024-01-05 09:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import municipal_finance.models.small_auto_field
import municipal_finance.models.updates


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("municipal_finance", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name='AgedCreditorItemsV1',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Aged Creditor Items (v1)',
                'db_table': 'aged_creditor_items',
            },
        ),
        migrations.CreateModel(
            name='AgedCreditorItemsV2',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Aged Creditor Items (v2)',
                'db_table': 'aged_creditor_items_v2',
            },
        ),
        migrations.CreateModel(
            name='AgedDebtorItemsV1',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('code', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Aged Debtor Items (v1)',
                'db_table': 'aged_debtor_items',
            },
        ),
        migrations.CreateModel(
            name='AgedDebtorItemsV2',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Aged Debtor Items (v2)',
                'db_table': 'aged_debtor_items_v2',
            },
        ),
        migrations.CreateModel(
            name='AmountType',
            fields=[
                ('code', models.TextField(primary_key=True, serialize=False)),
                ('label', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Amount Type (v1)',
                'db_table': 'amount_type',
            },
        ),
        migrations.CreateModel(
            name='AmountTypeV2',
            fields=[
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField(unique=True)),
                ('label', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Amount Type (v2)',
                'db_table': 'amount_type_v2',
            },
        ),
        migrations.CreateModel(
            name='AuditOpinionFacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('financial_year', models.IntegerField()),
                ('opinion_code', models.TextField()),
                ('opinion_label', models.TextField()),
                ('report_url', models.TextField(null=True)),
            ],
            options={
                'db_table': 'audit_opinion_facts',
            },
        ),
        migrations.CreateModel(
            name='BsheetItemsV1',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('code', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Balance Sheet Items (v1)',
                'db_table': 'bsheet_items',
            },
        ),
        migrations.CreateModel(
            name='CapitalItemsV1',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('code', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Capital Items (v1)',
                'db_table': 'capital_items',
            },
        ),
        migrations.CreateModel(
            name='CapitalTypeV2',
            fields=[
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField(unique=True)),
                ('label', models.TextField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Capital Items (v2)',
                'db_table': 'capital_type_v2',
            },
        ),
        migrations.CreateModel(
            name='CflowItemsV1',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('code', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Cash Flow Items (v1)',
                'db_table': 'cflow_items',
            },
        ),
        migrations.CreateModel(
            name='ConditionalGrantTypesV1',
            fields=[
                ('name', models.TextField(null=True)),
                ('code', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Conditional Grant Types (v1)',
                'db_table': 'conditional_grant_types',
            },
        ),
        migrations.CreateModel(
            name='DemarcationChanges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('old_code', models.TextField(db_index=True)),
                ('new_code', models.TextField(db_index=True)),
                ('old_code_transition', models.CharField(choices=[('disestablished', 'Disestablished'), ('established', 'Established'), ('continue', 'Continue')], db_index=True, max_length=20)),
                ('new_code_transition', models.CharField(choices=[('disestablished', 'Disestablished'), ('established', 'Established'), ('continue', 'Continue')], db_index=True, max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Demarcation Changes',
            },
        ),
        migrations.CreateModel(
            name='GovernmentFunctionsV1',
            fields=[
                ('label', models.TextField()),
                ('category_label', models.TextField()),
                ('subcategory_label', models.TextField()),
                ('code', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Goverment Functions (v1)',
                'db_table': 'government_functions',
            },
        ),
        migrations.CreateModel(
            name='GovernmentFunctionsV2',
            fields=[
                ('label', models.TextField()),
                ('category_label', models.TextField()),
                ('subcategory_label', models.TextField()),
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Goverment Functions (v2)',
                'db_table': 'government_functions_v2',
            },
        ),
        migrations.CreateModel(
            name='GrantTypesV2',
            fields=[
                ('name', models.TextField(null=True)),
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Grant Types (v2)',
                'db_table': 'grant_types_v2',
            },
        ),
        migrations.CreateModel(
            name='IncexpItemsV1',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('code', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Income & Expenditure Items (v1)',
                'db_table': 'incexp_items',
            },
        ),
        migrations.CreateModel(
            name='ItemCodeSchema',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('version', models.CharField(max_length=10, unique=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
            ],
            options={
                'verbose_name': 'Item Code Schema',
                'db_table': 'item_code_schema',
            },
        ),
        migrations.CreateModel(
            name='RepairsMaintenanceItemsV1',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('code', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'Repairs & Maintenance Items (v1)',
                'db_table': 'repairs_maintenance_items',
            },
        ),
        migrations.CreateModel(
            name='RepairsMaintenanceItemsV2',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Repairs & Maintenance Items (v2)',
                'db_table': 'repairs_maintenance_items_v2',
            },
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(unique=True)),
                ('content', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Data Summaries',
                'db_table': 'data_summaries',
            },
        ),
        migrations.CreateModel(
            name='UIFWExpenseFactsUpdate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UIFW Expense Facts Update',
                'db_table': 'uifw_expense_facts_update',
            },
        ),
        migrations.CreateModel(
            name='UIFWExpenseFacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('financial_year', models.IntegerField()),
                ('item_code', models.TextField()),
                ('item_label', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
            ],
            options={
                'db_table': 'uifwexp_facts',
                'unique_together': {('demarcation_code', 'financial_year', 'item_code')},
            },
        ),
        migrations.CreateModel(
            name='RepairsMaintenanceV2Update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Repairs & Maintenance Facts (v2) Update',
                'db_table': 'repairs_maintenance_v2_update',
            },
        ),
        migrations.CreateModel(
            name='RepairsMaintenanceFactsV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('item_code', models.TextField()),
                ('amount_type_code', models.TextField()),
            ],
            options={
                'db_table': 'repairs_maintenance_facts',
                'unique_together': {('demarcation_code', 'period_code', 'item_code'), ('amount_type_code', 'demarcation_code', 'financial_period', 'financial_year', 'item_code', 'period_length')},
            },
        ),
        migrations.CreateModel(
            name='MunicipalStaffContactsUpdate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Municipal Staff Contacts Update',
                'db_table': 'municipal_staff_contacts_update',
            },
        ),
        migrations.CreateModel(
            name='MunicipalStaffContacts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('demarcation_code', models.TextField()),
                ('role', models.TextField()),
                ('title', models.TextField(null=True)),
                ('name', models.TextField(null=True)),
                ('office_number', models.TextField(null=True)),
                ('fax_number', models.TextField(null=True)),
                ('email_address', models.TextField(null=True)),
            ],
            options={
                'db_table': 'municipal_staff_contacts',
                'unique_together': {('demarcation_code', 'role')},
            },
        ),
        migrations.CreateModel(
            name='IncomeExpenditureV2Update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Income & Expenditure Facts (v2) Update',
                'db_table': 'income_expenditure_v2_update',
            },
        ),
        migrations.CreateModel(
            name='IncexpItemsV2',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField()),
                ('version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='municipal_finance.ItemCodeSchema')),
            ],
            options={
                'verbose_name_plural': 'Income & Expenditure Items (v2)',
                'db_table': 'incexp_items_v2',
                'unique_together': {('code', 'version')},
            },
        ),
        migrations.CreateModel(
            name='IncexpFactsV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('item_code', models.TextField()),
                ('amount_type_code', models.TextField()),
                ('function_code', models.TextField()),
            ],
            options={
                'db_table': 'incexp_facts',
                'unique_together': {('amount_type_code', 'demarcation_code', 'financial_period', 'financial_year', 'function_code', 'item_code', 'period_length'), ('demarcation_code', 'period_code', 'function_code', 'item_code')},
            },
        ),
        migrations.CreateModel(
            name='GrantFactsV2Update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Grant Facts (v2) Update',
                'db_table': 'grant_facts_v2_update',
            },
        ),
        migrations.CreateModel(
            name='FinancialPositionItemsV2',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField()),
                ('version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='municipal_finance.ItemCodeSchema')),
            ],
            options={
                'verbose_name_plural': 'Balance Sheet Items (v2)',
                'db_table': 'financial_position_items_v2',
                'unique_together': {('code', 'version')},
            },
        ),
        migrations.CreateModel(
            name='FinancialPositionFactsV2Update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Financial Position Facts (v2) Update',
                'db_table': 'financial_position_facts_v2_update',
            },
        ),
        migrations.CreateModel(
            name='ConditionalGrantFactsV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('grant_code', models.TextField()),
                ('amount_type_code', models.TextField()),
            ],
            options={
                'db_table': 'conditional_grant_facts',
                'unique_together': {('demarcation_code', 'period_code', 'grant_code'), ('amount_type_code', 'demarcation_code', 'financial_period', 'financial_year', 'grant_code', 'period_length')},
            },
        ),
        migrations.CreateModel(
            name='CflowItemsV2',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField()),
                ('version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='municipal_finance.ItemCodeSchema')),
            ],
            options={
                'verbose_name_plural': 'Cash Flow Items (v2)',
                'db_table': 'cflow_items_v2',
            },
        ),
        migrations.CreateModel(
            name='CashFlowV2Update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cash Flow Facts (v2) Update',
                'db_table': 'cash_flow_v2_update',
            },
        ),
        migrations.CreateModel(
            name='CapitalItemsV2',
            fields=[
                ('label', models.TextField()),
                ('position_in_return_form', models.IntegerField(null=True)),
                ('return_form_structure', models.TextField(null=True)),
                ('composition', models.TextField(null=True)),
                ('id', municipal_finance.models.small_auto_field.SmallAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField()),
                ('version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='municipal_finance.ItemCodeSchema')),
            ],
            options={
                'db_table': 'capital_items_v2',
                'unique_together': {('code', 'version')},
            },
        ),
        migrations.CreateModel(
            name='CapitalFactsV2Update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Capital Facts (v2) Update',
                'db_table': 'capital_facts_v2_update',
            },
        ),
        migrations.CreateModel(
            name='AuditOpinionFactsUpdate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Opinion Facts Update',
                'db_table': 'audit_opinion_facts_update',
            },
        ),
        migrations.CreateModel(
            name='AgedDebtorFactsV2Update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Aged Debtors Facts (v2) Update',
                'db_table': 'aged_debtors_facts_v2_update',
            },
        ),
        migrations.CreateModel(
            name='AgedCreditorFactsV2Update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BigIntegerField(null=True)),
                ('inserted', models.BigIntegerField(null=True)),
                ('task_id', models.TextField(editable=False, null=True)),
                ('import_report', models.TextField(null=True)),
                ('file', models.FileField(max_length=255, upload_to=municipal_finance.models.updates.UpdateFilePath())),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Aged Creditors Facts (v2) Update',
                'db_table': 'aged_creditors_facts_v2_update',
            },
        ),
        migrations.CreateModel(
            name='RepairsMaintenanceFactsV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AmountTypeV2')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.RepairsMaintenanceItemsV2')),
            ],
            options={
                'db_table': 'repairs_maintenance_facts_v2',
                'unique_together': {('amount_type', 'demarcation_code', 'financial_period', 'financial_year', 'item', 'period_length'), ('demarcation_code', 'period_code', 'item')},
            },
        ),
        migrations.CreateModel(
            name='IncexpFactsV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AmountTypeV2')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.GovernmentFunctionsV2')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.IncexpItemsV2')),
            ],
            options={
                'db_table': 'incexp_facts_v2',
                'unique_together': {('demarcation_code', 'period_code', 'function', 'item'), ('amount_type', 'demarcation_code', 'financial_period', 'financial_year', 'function', 'item', 'period_length')},
            },
        ),
        migrations.CreateModel(
            name='GrantFactsV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AmountTypeV2')),
                ('grant_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.GrantTypesV2')),
            ],
            options={
                'db_table': 'grant_facts_v2',
                'unique_together': {('demarcation_code', 'period_code', 'grant_type'), ('demarcation_code', 'grant_type', 'amount_type', 'financial_period', 'financial_year', 'period_length')},
            },
        ),
        migrations.CreateModel(
            name='FinancialPositionFactsV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AmountTypeV2')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.FinancialPositionItemsV2')),
            ],
            options={
                'db_table': 'financial_position_facts_v2',
                'unique_together': {('amount_type', 'demarcation_code', 'financial_period', 'financial_year', 'item', 'period_length'), ('demarcation_code', 'period_code', 'item')},
            },
        ),
        migrations.CreateModel(
            name='CflowFactsV2',
            fields=[
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('amount_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AmountTypeV2')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.CflowItemsV2')),
            ],
            options={
                'db_table': 'cflow_facts_v2',
                'unique_together': {('amount_type', 'demarcation_code', 'financial_period', 'financial_year', 'item', 'period_length'), ('demarcation_code', 'period_code', 'item')},
            },
        ),
        migrations.CreateModel(
            name='CflowFactsV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type_code', models.TextField()),
                ('item_code', models.ForeignKey(db_column='item_code', on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.CflowItemsV1')),
            ],
            options={
                'db_table': 'cflow_facts',
                'unique_together': {('demarcation_code', 'period_code', 'item_code'), ('amount_type_code', 'demarcation_code', 'financial_period', 'financial_year', 'item_code', 'period_length')},
            },
        ),
        migrations.CreateModel(
            name='CapitalFactsV2',
            fields=[
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('amount', models.BigIntegerField(null=True)),
                ('amount_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AmountTypeV2')),
                ('capital_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.CapitalTypeV2')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.GovernmentFunctionsV2')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.CapitalItemsV2')),
            ],
            options={
                'db_table': 'capital_facts_v2',
                'unique_together': {('demarcation_code', 'function', 'item', 'capital_type', 'amount_type', 'financial_period', 'financial_year', 'period_length'), ('demarcation_code', 'function', 'item', 'capital_type', 'period_code')},
            },
        ),
        migrations.CreateModel(
            name='CapitalFactsV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type_code', models.TextField()),
                ('new_assets', models.BigIntegerField(null=True)),
                ('renewal_of_existing', models.BigIntegerField(null=True)),
                ('total_assets', models.BigIntegerField(null=True)),
                ('repairs_maintenance', models.BigIntegerField(null=True)),
                ('asset_register_summary', models.BigIntegerField(null=True)),
                ('function_code', models.ForeignKey(db_column='function_code', on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.GovernmentFunctionsV1')),
                ('item_code', models.ForeignKey(db_column='item_code', on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.CapitalItemsV1')),
            ],
            options={
                'db_table': 'capital_facts',
                'unique_together': {('demarcation_code', 'function_code', 'item_code', 'amount_type_code', 'financial_period', 'financial_year', 'period_length'), ('demarcation_code', 'function_code', 'item_code', 'period_code')},
            },
        ),
        migrations.CreateModel(
            name='BsheetFactsV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type_code', models.TextField()),
                ('item_code', models.ForeignKey(db_column='item_code', on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.BsheetItemsV1')),
            ],
            options={
                'db_table': 'bsheet_facts',
                'unique_together': {('demarcation_code', 'period_code', 'item_code'), ('amount_type_code', 'demarcation_code', 'financial_period', 'financial_year', 'item_code', 'period_length')},
            },
        ),
        migrations.CreateModel(
            name='AgedDebtorFactsV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('customer_group_code', models.TextField()),
                ('bad_amount', models.BigIntegerField(null=True)),
                ('badi_amount', models.BigIntegerField(null=True)),
                ('g1_amount', models.BigIntegerField(null=True)),
                ('l1_amount', models.BigIntegerField(null=True)),
                ('l120_amount', models.BigIntegerField(null=True)),
                ('l150_amount', models.BigIntegerField(null=True)),
                ('l180_amount', models.BigIntegerField(null=True)),
                ('l30_amount', models.BigIntegerField(null=True)),
                ('l60_amount', models.BigIntegerField(null=True)),
                ('l90_amount', models.BigIntegerField(null=True)),
                ('total_amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AmountTypeV2')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AgedDebtorItemsV2')),
            ],
            options={
                'db_table': 'aged_debtor_facts_v2',
                'unique_together': {('demarcation_code', 'period_code', 'customer_group_code', 'item'), ('amount_type', 'customer_group_code', 'demarcation_code', 'financial_period', 'financial_year', 'item', 'period_length')},
            },
        ),
        migrations.CreateModel(
            name='AgedDebtorFactsV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('customer_group_code', models.TextField()),
                ('bad_amount', models.BigIntegerField(null=True)),
                ('badi_amount', models.BigIntegerField(null=True)),
                ('g1_amount', models.BigIntegerField(null=True)),
                ('l1_amount', models.BigIntegerField(null=True)),
                ('l120_amount', models.BigIntegerField(null=True)),
                ('l150_amount', models.BigIntegerField(null=True)),
                ('l180_amount', models.BigIntegerField(null=True)),
                ('l30_amount', models.BigIntegerField(null=True)),
                ('l60_amount', models.BigIntegerField(null=True)),
                ('l90_amount', models.BigIntegerField(null=True)),
                ('total_amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type_code', models.TextField()),
                ('item_code', models.ForeignKey(db_column='item_code', on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AgedDebtorItemsV1')),
            ],
            options={
                'db_table': 'aged_debtor_facts',
                'unique_together': {('demarcation_code', 'period_code', 'customer_group_code', 'item_code'), ('amount_type_code', 'customer_group_code', 'demarcation_code', 'financial_period', 'financial_year', 'item_code', 'period_length')},
            },
        ),
        migrations.CreateModel(
            name='AgedCreditorFactsV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('g1_amount', models.BigIntegerField(null=True)),
                ('l1_amount', models.BigIntegerField(null=True)),
                ('l120_amount', models.BigIntegerField(null=True)),
                ('l150_amount', models.BigIntegerField(null=True)),
                ('l180_amount', models.BigIntegerField(null=True)),
                ('l30_amount', models.BigIntegerField(null=True)),
                ('l60_amount', models.BigIntegerField(null=True)),
                ('l90_amount', models.BigIntegerField(null=True)),
                ('total_amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AmountTypeV2')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AgedCreditorItemsV2')),
            ],
            options={
                'db_table': 'aged_creditor_facts_v2',
                'unique_together': {('amount_type', 'demarcation_code', 'financial_period', 'financial_year', 'item', 'period_length'), ('demarcation_code', 'period_code', 'item')},
            },
        ),
        migrations.CreateModel(
            name='AgedCreditorFactsV1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demarcation_code', models.TextField()),
                ('period_code', models.TextField()),
                ('g1_amount', models.BigIntegerField(null=True)),
                ('l1_amount', models.BigIntegerField(null=True)),
                ('l120_amount', models.BigIntegerField(null=True)),
                ('l150_amount', models.BigIntegerField(null=True)),
                ('l180_amount', models.BigIntegerField(null=True)),
                ('l30_amount', models.BigIntegerField(null=True)),
                ('l60_amount', models.BigIntegerField(null=True)),
                ('l90_amount', models.BigIntegerField(null=True)),
                ('total_amount', models.BigIntegerField(null=True)),
                ('financial_year', models.IntegerField()),
                ('period_length', models.TextField()),
                ('financial_period', models.IntegerField()),
                ('amount_type_code', models.TextField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='municipal_finance.AgedCreditorItemsV1')),
            ],
            options={
                'db_table': 'aged_creditor_facts',
                'unique_together': {('amount_type_code', 'demarcation_code', 'financial_period', 'financial_year', 'period_length', 'item'), ('demarcation_code', 'period_code', 'item')},
            },
        ),
    ]
